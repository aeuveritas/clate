# Environment
ENV GCC_VERSION=8.2.0 \
    GLOBAL_VERSION=6.6.2

WORKDIR $HOME

# Install dependencies
RUN apk add --update --no-cache \
    bash \
    build-base \
    git \
    make \
    bison \
    flex \
    ncurses-dev \
    ncurses-libs \
    ncurses-terminfo \
    libtool \
    curl \
    mpfr-dev \
    mpc1-dev \
    autoconf \
    automake \
    isl-dev

# Build GCC
RUN wget https://ftp.gnu.org/gnu/gcc/gcc-${GCC_VERSION}/gcc-${GCC_VERSION}.tar.gz \
    && tar -xzf gcc-${GCC_VERSION}.tar.gz \
    && cd gcc-${GCC_VERSION} \
    && mkdir -p build && cd build \
    && ../configure \
        --prefix=/usr/local \
        --build=$(uname -m)-alpine-linux-musl \
        --host=$(uname -m)-alpine-linux-musl \
        --target=$(uname -m)-alpine-linux-musl \
        --enable-checking=release \
        --disable-fixed-point \
        --disable-libmpx \
        --disable-libmudflap \
        --disable-libsanitizer \
        --disable-libssp \
        --disable-libstdcxx-pch \
        --disable-multilib \
        --disable-nls \
        --disable-symvers \
        --disable-werror \
        --enable-language=c,c++ \
        --enable-libstdcxx-threads \
        --enable-libstdcxx-time \
    && make -j $(nproc) && make install-strip \
    && cd ../.. \
    && rm -rf gcc-${GCC_VERSION} \
    && tar -xzf gcc-${GCC_VERSION}.tar.gz \
    && cd gcc-${GCC_VERSION} \
    && mkdir -p build && cd build \
    && ../configure \
        --prefix=/usr/local \
        --build=$(uname -m)-alpine-linux-musl \
        --host=$(uname -m)-alpine-linux-musl \
        --target=$(uname -m)-alpine-linux-musl \
        --enable-checking=release \
        --disable-fixed-point \
        --disable-libmpx \
        --disable-libmudflap \
        --disable-libsanitizer \
        --disable-libssp \
        --disable-libstdcxx-pch \
        --disable-multilib \
        --disable-nls \
        --disable-symvers \
        --disable-werror \
        --enable-language=c,c++ \
        --enable-libstdcxx-threads \
        --enable-libstdcxx-time \
    && make -j $(nproc) && make install-strip \
    && cd ../.. \
    # Build libstdc++-v3
    && cd gcc-${GCC_VERSION}/libstdc++-v3 \
    && mkdir -p build && cd build \
    && ../configure \
        --prefix=/usr/local/gcc-${GCC_VERSION} \
        --build=$(uname -m)-alpine-linux-musl \
        --host=$(uname -m)-alpine-linux-musl \
        --target=$(uname -m)-alpine-linux-musl \
        --disable-multilib \
        --disable-libstdcxx-pch \
    && make -j $(nproc) && make install-strip \
    && cd ../../.. \
    # Remove GCC source
    && rm -rf gcc-${GCC_VERSION} \
    && rm gcc-${GCC_VERSION}.tar.gz

# Build Clang
COPY shell/apkbuild.sh /usr/local/bin/
RUN export BUILD_DEPS='alpine-sdk patchelf' \
    && apk update \
    && apk add $BUILD_DEPS \
    && adduser -D apk \
    && adduser apk abuild \
    && sudo -iu apk abuild-keygen -a \
    && sudo -iu apk git clone --depth=1 -b pr-llvm-6 https://github.com/Kronuz/aports \
    && cp /home/apk/.abuild/*.rsa.pub /etc/apk/keys \
    # For faster builds in multi-processor boxes:
    && sudo -iu apk sh -xec 'cd aports/main/llvm6; sh /usr/local/bin/apkbuild.sh' \
    && sudo -iu apk sh -xec 'cd aports/main/clang; sh /usr/local/bin/apkbuild.sh' \
    && sudo -iu apk sh -xec 'cd aports/main/compiler-rt; sh /usr/local/bin/apkbuild.sh' \
    && sudo -iu apk sh -xec 'cd aports/community/lld; sh /usr/local/bin/apkbuild.sh' \
    && sudo -iu apk sh -xec 'cd aports/community/llvm-libunwind; sh /usr/local/bin/apkbuild.sh' \
    && sudo -iu apk sh -xec 'cd aports/testing/libc++; sh /usr/local/bin/apkbuild.sh' \
    # First pass.
    # Build the needed components using gcc (libc++ is build last, using the built clang):
    && sudo -iu apk sh -xec 'cd aports/main/llvm6; abuild -r' \
    && apk add /home/apk/packages/main/$(uname -m)/llvm6-*.apk \
    && sudo -iu apk sh -xec 'cd aports/main/clang; abuild -r' \
    && apk add /home/apk/packages/main/$(uname -m)/clang-*.apk \
    && sudo -iu apk sh -xec 'cd aports/community/lld; abuild -r' \
    && apk add /home/apk/packages/community/$(uname -m)/lld-*.apk \
    && sudo -iu apk sh -xec 'cd aports/community/llvm-libunwind; abuild -r' \
    && apk add /home/apk/packages/community/$(uname -m)/llvm-libunwind-*.apk \
    && sudo -iu apk sh -xec 'cd aports/testing/libc++; abuild -r' \
    && apk add /home/apk/packages/testing/$(uname -m)/libc++-*.apk \
    && sudo -iu apk sh -xec 'cd aports/main/compiler-rt; abuild -r' \
    && apk add /home/apk/packages/main/$(uname -m)/compiler-rt-*.apk \
    ## Second pass.
    ## Build and install a llvm6 and clang which compiles using lld, libc++ and compiler-rt:
    ## (but first patch rpath for current clang and lld so they keep working during the process)
    #&& rm /usr/lib/libunwind.so* \
    #&& sudo -iu apk cp -R /usr/lib lib1 \
    #&& patchelf --set-rpath '/home/apk/lib1:/home/apk/lib1/llvm6/lib:$ORIGIN/../lib:/usr/lib/llvm6/lib' /usr/bin/clang \
    #&& patchelf --set-rpath '/home/apk/lib1:/home/apk/lib1/llvm6/lib:$ORIGIN/../lib:/usr/lib/llvm6/lib' /usr/bin/lld \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; cd aports/main/llvm6; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/main/$(uname -m)/llvm6-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; export CLANG_DEFAULT_LINKER="lld"; export CLANG_DEFAULT_CXX_STDLIB="libc++"; export CLANG_DEFAULT_RTLIB="compiler-rt"; cd aports/main/clang; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/main/$(uname -m)/clang-*.apk \
    ## Third pass.
    ## Rebuild and install everything using new clang with libc++ and compiler-rt (kill all gcc dependencies):
    ## (but first patch rpath for current clang so it keeps working during the process)
    #&& sudo -iu apk cp -R /usr/lib lib2 \
    #&& patchelf --set-rpath '/home/apk/lib2:/home/apk/lib2/llvm6/lib:$ORIGIN/../lib:/usr/lib/llvm6/lib' /usr/bin/clang \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; cd aports/main/llvm6; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/main/$(uname -m)/llvm6-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; export CLANG_DEFAULT_LINKER="lld"; export CLANG_DEFAULT_CXX_STDLIB="libc++"; export CLANG_DEFAULT_RTLIB="compiler-rt"; cd aports/main/clang; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/main/$(uname -m)/clang-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; cd aports/main/compiler-rt; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/main/$(uname -m)/compiler-rt-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; cd aports/community/lld; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/community/$(uname -m)/lld-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; cd aports/community/llvm-libunwind; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/community/$(uname -m)/llvm-libunwind-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; export LIBCXX_USE_COMPILER_RT="ON"; cd aports/testing/libc++; abuild cleanpkg; abuild -r' \
    #&& apk add /home/apk/packages/testing/$(uname -m)/libc++-*.apk \
    #&& sudo -iu apk sh -xec 'export CC="clang"; export CXX="clang++"; cd aports/testing/lldb; abuild -r' \
    #&& apk add /home/apk/packages/testing/$(uname -m)/lldb-*.apk \
    # Save .apk packages
    && mkdir /packages \
    && cp /home/apk/.abuild/apk-*.rsa.pub /packages \
    && find /home/apk/packages -name '*.apk' -exec mv {} /packages \; \
    # Cleanup:
    && deluser --remove-home apk \
    && rm -rf /var/cache/apk/APKINDEX* \
    && apk del --no-cache $BUILD_DEPS \
    && cp /packages/apk-*.rsa.pub /etc/apk/keys \
    && apk add /packages/libc++-6.0.1-r0.apk \
        /packages/llvm-libunwind-6.0.1-r0.apk \
    && apk add --no-cache --virtual build-clang \
        binutils \
        musl-dev \
        /packages/llvm6-libs-6.0.1-r0.apk \
        /packages/compiler-rt-6.0.1-r0.apk \
        /packages/llvm-libunwind-dev-6.0.1-r0.apk \
        /packages/clang-6.0.1-r0.apk \
        /packages/clang-libs-6.0.1-r0.apk \
        /packages/clang-dev-6.0.1-r0.apk \
        /packages/lld-6.0.1-r0.apk \
        /packages/lld-libs-6.0.1-r0.apk \
        /packages/libc++-dev-6.0.1-r0.apk \
    #    /packages/lldb-6.0.1-r0.apk \
    #    /packages/lldb-dev-6.0.1-r0.apk \
    #    /packages/py2-lldb-6.0.1-r0.apk \
    && rm -rf /packages $HOME/aports/
